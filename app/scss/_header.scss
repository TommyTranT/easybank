.header {

// Hamburger Open Styles
  &.open {
        
    .header__toggle{
      > span:first-child {
        transform: rotate(45deg);
      }
  
      > span:nth-child(2) {
        opacity: 0;
      }
  
      > span:last-child {
        transform: rotate(-45deg);
      }
    }
    
    .overlay {
      opacity: 0;
      position: fixed;
      top: 3.75rem; // to not cover header, make this the height of header which is 60px / 16 = 3.75rem
      right: 0px;
      bottom: 0px;
      left: 0px;
      background-image: linear-gradient($darkBlue, transparent);
    }
  }
    
  nav {
    padding-top: 1.0625rem;
    padding-bottom: 1.0625rem;
  }

  &__logo {

    img {
      width: 8.8125rem; //141px / 16 = rem size
      height: 1.375rem; //22px / 16 = rem size
    }

  }

  &__toggle {// Mobile Menu Toggle
  
    > span {
      display: block;
      width: 26px;
      height: 2px;
      background-color: $darkBlue;
      transition: all 300ms ease-in-out;
      transform-origin: 3px 1px;

      &:not(:last-child){// applys to all span except last child
        margin-bottom: 5px;
      }
    }


  }

  &__menu {
    position: absolute;
    width: calc(100% - 3rem); // Adds 1.5rem to left and right
    // Makes menu in the middle
    left: 50%; 
    transform: translateX(-50%); 

    background: $white;
    margin-top: 1.5rem;
    padding: 1.625rem;
    border-radius: 5px;

    a {
      display: block;
      padding: 0.625rem;
      color: $darkBlue;
      text-align: center;
    }
  }

  &__links {
    a {
      position: relative;
      font-size: $font-sm;
      color: $grayishBlue;
      transition: color 300ms ease-in-out; // when changing color do this transistion

      &:not(:last-child){ //adds margin to all links except last one
        margin-right: 32px;
      }

      &::before { // adds bottom line for each link. inserts something before each content
        content: "";
        display: block;
        position: absolute;
        height: 5px;
        left: 0;
        right: 0;
        bottom: -30px;
        background: linear-gradient(to right, $limeGreen, $brightCyan);
        opacity: 0; // makes it invisible
        transition: opacity 300ms ease-in-out;
      }
      
      &:hover {
        color: $darkBlue; // change font color when hovered over
        
        &::before { // when element is being hovered, show background color
          opacity: 1;
        }
      }
    }
  }

  &__cta {
    font-size: $font-sm;
    color: $white;
    transition: opacity 300ms ease-in-out;

    &:hover {
      opacity: 0.75;
    }
  }
}



